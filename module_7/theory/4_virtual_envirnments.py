# Створення віртуального оточення
# Встановлювати пакети Python в систему глобально — не найкраща ідея, оскільки встановлені пакети захаращують систему і
# можуть конфліктувати. Конфлікти встановлених пакетів — це одна з проблем, що найважче виправляються, при роботі з
# Python. "Поламані" залежності можуть забрати багато часу навіть у дуже досвідченого розробника. Тим паче складніше
# впоратися з цим новачкам.
#
# Щоб уникнути проблем із залежностями, і встановлення потрібних для якогось проекту пакетів не впливала на всю вашу
# операційну систему та інші проекти, рекомендується використати віртуальне оточення Python.
#
# Оскільки пакет у Python — це папки з файлами-модулями, ми можемо створити окрему папку для пакетів-залежностей
# всередині кожного проекту. Якщо вказати Python, що працюючи в папці проекту, імпортувати потрібно саме з цієї папки,
# то тоді ми зможемо ізолювати нашу операційну систему і наші проекти один від одного. Така папка з пакетами-залежностями
# — це і є вуртуальне оточення.
#
# Звичайно, існує безліч інструментів, які автоматизують для нас створення/видалення/активування віртуального оточення.
# Найпростіший і найстандартніший інструмент — це venv.
#
# Почитати, що вміє venv, можна на сторінці офіційної документації. Так само як і pip, venv — це консольний Python скрипт.
#
# Щоб створити нове віртуальне оточення, виконайте: python3 -m venv /path/to/new/virtual/environment або venv
# /path/to/new/virtual/environment. Після виконання цієї команди у /path/to/new/virtual/environment буде скопійований
# Python з мінімальним набором стандартних пакетів. І ви зможете використати цей Python окремо від основного системного
# або будь-якого іншого.
#
# Щоб почати використовувати Python з віртуального оточення, виконайте в консолі:
# \path\to\new\virtual\environment\Scripts\activate.bat або source /path/to/new/virtual/environment/bin/activate
# для Linux / Mac OS. Якщо ви використовуєте PowerShell,
#то можна виконати \path\to\new\virtual\environment\Scripts\Activate.ps1.
#
# Після активації в цій консолі виклик python буде викликати не системний Python, а версію з
# /path/to/new/virtual/environment зі своїми пакетами.
#
# Активувавши віртуальне оточення, ви можете встановлювати/видаляти пакети за допомогою pip у віртуальному оточенні.
# Встановлення/видалення пакетів впливає тільки на віртуальне оточення і не зачіпає систему або інші проекти.
#
# Щоб повернутися до системного Python, виконайте: deactivate.
# 
# Щоб повністю видалити віртуальне оточення, достатньо видалити папку \path\to\new\virtual\environment\ з усім її вмістом.