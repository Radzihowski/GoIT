# Встановлення пакетів за допомогою pip
# Встановлення додаткових пакетів в Python здійснюється менеджерами пакетів. Стандартний (але не єдиний) менеджер
# пакетів Python — це pip. pip може:
# - встановлювати пакети https://pypi.org/
# - встановлювати пакети з локального репозиторію або розташованого на будь-якому ресурсі, що підтримує протокол pip.
# - видаляти пакети
# - показувати список встановлених доступних пакетів (з версіями або без)
# - показувати, які пакети застаріли (зі встановлених) і їх можна оновити
# - видаляти пакети
#
# pip написаний на Python і є пакетом Python, який входить в стандартне постачання (попередньо встановлений). Ви можете,
# звичайно, окремо його встановити або оновити як будь-який інший пакет, якщо потрібно.
#
# Використання pip передбачає виконання його як скрипту Python з аргументами під час виклику. Наприклад, щоб вивести
# список встановлених пакетів:

# python3 -m pip list
#
# Значення -m вказує, що потрібно викликати пакет як скрипт, що виконується, list — це аргумент, за яким pip "розуміє",
# що потрібно зробити (вивести список встановлених пакетів).
#
# Часто в системі прописано, що pip запускається за допомогою Python і ви можете викликати pip напряму:

# pip list
#
# Повна документація з pip доступна на сторінці офіційної документації.

# - встановлення останньої версії пакету some_package: pip install some_package
# - встановлення версії 1.12.3 пакету some_package: pip install some_package==1.12.3
# - встановлення версії пакету some_package новішого за 1.12.3: pip install some_package>=1.12.3
# - встановлення версії пакету some_package давнішого за 1.12.3: pip install some_package<=1.12.3
# - видалення пакету some_package: pip uninstall some_package
# - список встановлених пакетів: pip list
# - список встановлених пакетів з версіями: pip freeze
# - встановлення пакетів з текстового файлу requirements.txt: pip install -r requirements.txt