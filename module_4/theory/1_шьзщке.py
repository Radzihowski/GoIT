# Робота з модулями та створення віртуального оточення
# Імпорт пакетів та модулів
#
# Короткі та прості скрипти поміщаються в одному не дуже великому файлі та зазвичай мають розмір до 400 рядків. Такі
# скрипти не складно підтримувати і розвивати. Але рано чи пізно настає момент, коли коду в файлі стає надто багато.
# Розмір одного файлу робить навігацію файлом складною і пошук у файлі потрібного місця коду займає надто купу часу.
# У такій ситуації зручно буде розбити великий скрипт на складові частини і структурувати наш код. Це зробить роботу
# з проєктом простішою і зручнішою.
#
# Хороша структура проєкту значно спрощує підтримку і розробку. Погана ж — навпаки істотно уповільнює роботу. І що
# більший проєкт, тим це помітніше. Не лінуйтеся приділяти час на продумування структури вашого проєкту при кожній
# значній зміні. Ваші зусилля не пройдуть даремно і обов'язково окупляться в майбутньому.
#
# У Python модуль - це файл, який містить всілякі визначення такі, як функції, класи, змінні тощо. Модуль може
# містити будь-який корисний код, і його основна мета - допомогти у структуризації та організації коду.
#
# У Python є великий набір вбудованих пакетів та модулів з готовими корисними функціями та інструментами. Якщо вам
# потрібно зробити щось, чого немає в стандартному невеликому наборі функцій, ви можете імпортувати пакет, де є
# необхідна функція, щоб скористатися нею. Імпортування у Python відбувається за допомогою ключового слова import,
# після якого ви можете вказати один або декілька пакетів, які ви хочете імпортувати.
#
import math

sin_pi = math.sin(math.pi)

# У цьому прикладі ми імпортували пакет математичних функцій і констант math та зберегли значення синуса $π$ у
# змінній sin_pi. Різницю між пакетом там модулем ми пояснимо трохи пізніше, поки думайте про модуль як файл, а
# пакет набір файлів - директорію з файлами.
#
# Для того щоб викликати функцію з імпортованого пакету, потрібно вказати ім'я пакету і через крапку ім'я функції або
# константи в цьому пакеті. Цей синтаксис дуже схожий на виклик метода, ми робили так зі словниками та списками раніше.
#
# Є й інший спосіб: можна імпортувати з пакета тільки те, що нам необхідно за допомогою виразу from ... import ...:
from math import pi, sin

sin_pi = sin(pi)

# Цей код робить те саме, що і код вище. Використовуйте той синтаксис, який вам здається зручнішим.
#
# ☝ Можна імпортувати весь вміст модуля за допомогою інструкції from <module_name> import *. Це може здатися зручним,
# але не рекомендується через можливі конфлікти імен і ускладнення читабельності коду в майбутньому.
# Імпортувати код можна не лише із стандартних або встановлених пакетів (модулів), але й з власноручно написаних
# модулів Python
# Що таке модуль у Python?
#
# Модулем Python є будь-який текстовий файл з розширенням py, який містить код мовою Python. Це означає, що коли ви
# створюєте скрипт mymodule.py, який містить ось такий код:
# mymodule.py
def say_hello(name):
    return f'Hello, {name}!'

