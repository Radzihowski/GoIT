# Counter
# Розглянемо наступну задачу. Є список в якому потрібно підрахувати кількість елементів, що в ньому зустрічаються. Для
# цього досить зручно скористатися словником. Реалізація такої задачі може виглядати наступним чином.
student_marks = [4, 2, 4, 6, 7, 4, 2, 3, 4, 5, 6, 6, 7, 1, 1, 1, 3, 5]
mark_counts = {}
for mark in student_marks:
    if mark in mark_counts:
        mark_counts[mark] += 1
    else:
        mark_counts[mark] = 1
print(mark_counts)
# Виведення:
# {4: 4, 2: 2, 6: 3, 7: 2, 3: 2, 5: 2, 1: 3}
# Таке завдання зустрічається досить часто і, щоб не писати одні й ті самі 6 рядків коду постійно, у collections додали
# спеціальний словник Counter
# Counter відноситься до модуля collections і служить для підрахунку хешабельних об'єктів. Це особливо корисно, коли
# потрібно швидко підрахувати кількість окремих елементів у колекції, наприклад у списку, рядку або будь-якому іншому
# ітерованому об'єкті. Counter функціонує як словник, де ключами є елементи, а значеннями - їх кількість у колекції.
# Щоб створити Counter, просто передайте йому ітерований об'єкт. Тож попередній приклад можна перезаписати наступним чином:
import collections

import collections
student_marks = [4, 2, 4, 6, 7, 4, 2, 3, 4, 5, 6, 6, 7, 1, 1, 1, 3, 5, 4, 2, 4, 6, 7, 4, 2, 3, 4, 5, 6, 6, 7, 1, 1, 1, 3, 5]
mark_counts = collections.Counter(student_marks)
print(mark_counts)

# Виведення:
# Counter({4: 4, 6: 3, 1: 3, 2: 2, 7: 2, 3: 2, 5: 2})
# Один з найпопулярніших методів Counter - це most_common(), який повертає список елементів та їх частоту, починаючи з
# тих які зустрічаються найчастіше. Цей метод може бути надзвичайно корисним для аналізу даних, коли важливо визначити,
# які елементи зустрічаються найчастіше.

import collections
student_marks = [4, 2, 4, 6, 7, 4, 2, 3, 4, 5, 6, 6, 7, 1, 1, 1, 3, 5, 4, 2, 4, 6, 7, 4, 2, 3, 4, 5, 6, 6, 7, 1, 1, 1, 3, 5]
mark_counts = collections.Counter(student_marks)
print(mark_counts.most_common())
print(mark_counts.most_common(1))
print(mark_counts.most_common(2))

# Виведення:
# [(4, 4), (6, 3), (1, 3), (2, 2), (7, 2), (3, 2), (5, 2)]
# [(4, 4)]
# [(4, 4), (6, 3)]

# Наприклад, якщо вам потрібно підрахувати кількість кожної літери у рядку, просто передайте рядок безпосередньо до Counter.
# Тоді ви можете легко отримати доступ до кількості кожної літери за допомогою ключів, як у звичайному словнику.

from collections import Counter
# Створення Counter з рядка
latter_count = Counter("banana")
print(latter_count)

# Виконати підрахунок слів в тексті теж стає досить простою задачею:
sentence = "the quick brown fox jumps over the lazy dog"
word = sentence.split()
word_count = Counter(word)

# Виведення слова та його частоти
for word, count in word_count.items():
    print(f"{word}: {count}")

# Використання Counter є інтуїтивно зрозумілим і водночас надзвичайно потужним для рішення багатьох задач, пов'язаних
# із підрахунком та аналізом даних.